<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>「服务器」开服旅人</title>
    <link href="/2023/07/10/A_MinecraftServer_Traveler/"/>
    <url>/2023/07/10/A_MinecraftServer_Traveler/</url>
    
    <content type="html"><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>暑假闲得无聊，开个服和朋友们一块玩耍，借此机会记录下开服过程。</p><p>这次制作的是 1.20.1 原版纯净生存服。</p><p>*<em>此篇碎碎念偏多，操作步骤省略程度看心情</em></p><p>预置环境：python 3.8及以上、Java JDK 11及以上</p><p>*<em>须知：此篇文章仅可作为一个开服过程的记录，作为开服教程可能显得有些马虎。最有价值的地方个人认为在 <strong>自定义&amp;功能性插件推荐</strong> 上，对于刚完成服务器基础配置的新服主和对遇到同样问题的服主有一定帮助，这一部分也会持续补充。</em></p><h2 id="选择服务端"><a href="#选择服务端" class="headerlink" title="选择服务端"></a>选择服务端</h2><p>既然是原版服，那选服务端范围就界定在 1.20.1 官方端和衍生插件端了，fabric&#x2F;forge端、mod插件端徒增算力，不考虑。</p><p>我个人意愿下不会用原版端（官方端），原因就在于它优化一般，在挂到 2C4G 云服务器配置下表现显著不如第三方插件端。而且论扩展性也不如插件端多。</p><p>之前开服的时候一直用的 Paper服务端。它仅提供插件加载服务，优化做的也不错，但是总是要尝试些新的东西对吧，于是我选择了 Purpur。对它我了解不多，也只是听说是Paper的优化分支，所以就尝试一下。</p><h2 id="服务端基础安装并配置"><a href="#服务端基础安装并配置" class="headerlink" title="服务端基础安装并配置"></a>服务端基础安装并配置</h2><p>我这里使用了github上 MCDReforged 项目（以后简称MCDR），它是一个基于 Python 的 Minecraft 服务端控制工具。可以在服务端之外再套一个壳，这样可以实现许多功能：</p><ol><li><p>在服务端崩溃后自动重启服务器</p></li><li><p>在游戏内控制服务器重启，停服等操作</p></li><li><p>定时多槽位备份世界，并可由玩家&#x2F;终端回档</p></li></ol><p>*<em>你可能纳闷这不是一个服务器自己应有的功能吗，怎么还需要第三方实现？但是Mojang就是这么懒。</em></p><p>用 pip 安装 MCDR：</p><p><code>pip install mcdreforged</code></p><p>等待安装成功，新建服务器文件夹并进入，运行指令以初始化 MCDR 的运行环境：</p><p><code>mkdir swarm</code></p><p><code>cd swarm</code></p><p><code>python -m mcdreforged init</code></p><p>然后就可以发现 MCDR 生成了如下路径结构</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs lua">swarm/<br> ├─ <span class="hljs-built_in">config</span>/<br> ├─ logs/<br> │   └─ MCDR.<span class="hljs-built_in">log</span><br> ├─ plugins/<br> ├─ server/<br> ├─ <span class="hljs-built_in">config</span>.yml<br> └─ permission.yml<br></code></pre></td></tr></table></figure><p>将刚刚下好的<code>purpur-1.20.1-xxxx.jar</code>移至<code>server</code>文件夹里</p><p>MCDR 适用于多种服务端，因此要在<code>swarm/config.yml</code>里进行一些配置，来适配 Purpur 服务端环境</p><p>在<code>start_command：</code>后将<code>minecraft_server.jar</code>改成<code>purpur-1.20.1-xxxx.jar</code></p><p>在<code>handler: </code>将<code>vanilla_handler</code>改为<code> bukkit_handler</code></p><p>运行 MCDR 指令</p><p><code>python -m mcdreforged</code></p><p>这时候发现服务端启动不成功，是因为你没有同意此服务端协议：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs terminal">[Server] [WARN]: Failed to load eula.txt<br>[Server] [INFO]: You need to agree to the EULA in order to run the server. Go to eula.txt for more info.<br>[MCDR] [MainThread/INFO]: Server process stopped with code 0<br>[MCDR] [MainThread/INFO]: Server stopped<br>[MCDR] [MainThread/INFO]: Stopping MCDR<br>[MCDR] [MainThread/INFO]: Stopping advanced console<br>[MCDR] [MainThread/INFO]: bye<br></code></pre></td></tr></table></figure><p>将<code>server</code>文件夹的<code>eula.txt</code>里的<code>false </code>改为<code>true</code> ，即同意第三方插件端提供的服务。</p><p>再次启动 MCDR</p><p>不出意外的话服务器正常加载并运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs terminal">[Server]: Running delayed init tasks<br>[Server]: Done (10.564s)! For help, type &quot;help&quot;<br>&gt;<br></code></pre></td></tr></table></figure><p>到这里你的服务器其实已经是运行中的了，如果你像我一样挂载到云服务器，告诉别人你的公网IP，其他人就可以直接进入并游玩。</p><p><strong>但是也就是仅仅能玩。</strong>如上所说定时存档、崩溃自启、回档等功能均无法实现，均需要MCDR下的插件。下面是插件对应的功能：</p><ol><li><p>Crash restart 在服务端崩溃后自动重启服务器的插件</p></li><li><p>StartStopHelperR 游戏内开关服</p></li><li><p>Quick Backup Multi 多槽位备份&#x2F;回档插件</p></li><li><p>Timed QBM 一个QuickBackupM插件的扩展，用于定时触发QBM从而进行自动备份</p></li></ol><p>插件安装比较简单，直接扔到<code>swarm/plugins</code>即可，配置过程也省略，阅读相应文档即可。</p><p>*<em>以上插件及对应文档均可在 MCDR 插件仓库找到</em></p><p>阅读相应插件对应文档并配置好后，再次启动 MCDR 。恭喜你，将它打包上传到云服务器，一个基本满足需求的服务器便诞生了。</p><h2 id="自定义-功能性插件推荐"><a href="#自定义-功能性插件推荐" class="headerlink" title="自定义&amp;功能性插件推荐"></a>自定义&amp;功能性插件推荐</h2><p>开服之后，个人建议需要更改的几个点：</p><p><code>swarm/server/server.properties</code>文件是储存服务器所有设置的文件，使用IDE可以修改，我修改了如下几点：</p><ol><li><p><code>difficulty</code> 定义服务器的游戏难度。</p></li><li><p><code>max-players</code> 服务器同时能容纳玩家的最大数量，能有效控制服务器运存</p></li><li><p><code>motd</code> 本属性值是玩家客户端的多人游戏服务器列表中显示的服务器信息，显示于名称下方，且支持格式化代码</p></li><li><p><code>online-mode</code> 即是否开启正版验证，默认开启。如若关闭，则可认为所有知晓服务器IP的玩家都可进入服务器，建议关闭后开启白名单配合使用。以防止服务器被扫，陌生玩家进入服务器的危险情况。</p></li><li><p><code>white-list</code> 服务器白名单，默认关闭。建议在<code>online-mode</code>关闭时开启</p></li><li><p><code>server-port</code> 服务器端口号，默认为25565。建议修改为其他数目（1-65534之间的整数）可以一定程度上减少服务器被扫的次数。</p></li></ol><p>更详细的内容详见 Server.Properties Fandom Wiki。</p><p>此外服务器还可以设置一个图标，他能够显示在多人游戏的列表中</p><p>上述的服务器配置似乎已经满足日常需求，但实则不然，在游玩时还会遇到许多问题。本人在先前建服游玩的过程中，共积攒了如下问题（见后）</p><p>幸运的是，这些问题已都有先例，也就是说有现成的插件来解决，而我做的只是稍作配置拿来用就可以了，并且分享在这里。（再次感叹社区力量的强大）</p><p>Q: 如果你的云服务器规模较小，那么它的地图加载速度将会慢的可怜，游戏中跑图，飞行经常会触碰到世界边界。</p><p>A: 「Chunky」可以以出生点为轴心预加载地图，很大程度减少遇到世界边界的问题</p><p>Q: 如果关闭了服务器正版验证，进入服务器会有弹窗警示，十分影响游玩观感</p><p>A: 「SystemChat」屏蔽了弹窗</p><p>Q: 服务器中遇到熊孩子，偷窃物品等问题无法查明肇事人，就算是作为腐竹也无能为力</p><p>A: 「CoreProtect」实时监控世界中方块&#x2F;物品变化动态，可以由服务器管理员随时查询</p><p>Q: 新版服务器中<code>tab键</code>补全掺杂着太多不必要选项</p><p>A: 「CommandWhitelist」自定义<code>tab键</code>补全白名单</p><p>Q: 给予普通玩家一定的指令权限，如<code>/locate</code>指令</p><p>A: 「Groupmanager」权限管理器</p><p>Q: 非正版玩家想在服务器内显示自定义皮肤</p><p>A: 「SkinsRestorer」内建服务器皮肤资源管理器</p><p>将下载好的<code>xxxx.jar</code>文件扔到<code>swarm/server/plugins</code>文件夹里即可，配置方面请查看各插件文档并按需配置。</p><p>注意<code>swarm/server/plugins</code>中的插件是 Spigot&#x2F;Bukkit 插件，后缀名为<code>.jar</code>，由 Purpur 服务端加载运行。而<code>swarm/plugins</code>中的插件是 MCDR 插件，后缀名为<code>.py</code>或<code>.mcdr</code>，由 MCDR 加载运行，请注意甄别。</p><p>*<em>本教程插件的配置及推荐均强调“功能”插件，对于服务器的“优化”提的不多，是因为优化服务器的方法十分多样，而且不同规模的服务器优化方式不同，优化程度也没有“上限”之说。如想了解推荐这篇文章</em></p><p>写到这里，我制作服务器的基本流程也就结束了。整个过程中参考的文档网址将放在下侧，虽然只是日记式的记录，但希望多少对读者有一些帮助！</p><p>*<em>这是我的第一篇markdown文本，如排版语法不规范，请见谅！</em></p>]]></content>
    
    
    
    <tags>
      
      <tag>mc</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
